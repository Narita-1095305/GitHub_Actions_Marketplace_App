{
  "overall_score": 7.3999999999999995,
  "max_score": 7.3999999999999995,
  "vulnerability_scores": [
    {
      "overall": 4.1,
      "cvss_component": 2.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 5,
      "vulnerability": {
        "id": "GHSA-2c4m-59x9-fr2g",
        "package": "github.com/gin-gonic/gin",
        "version": "1.9.0",
        "cvss": 2.5,
        "severity": "LOW",
        "summary": "Gin Web Framework does not properly sanitize filename parameter of Context.FileAttachment function",
        "description": "The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of \"setup.bat\u0026quot;;x=.txt\" will be sent as a file named \"setup.bat\".\n\nIf the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29401",
          "https://github.com/gin-gonic/gin/issues/3555",
          "https://github.com/gin-gonic/gin/pull/3556",
          "https://github.com/gin-gonic/gin",
          "https://github.com/gin-gonic/gin/releases/tag/v1.9.1",
          "https://pkg.go.dev/vuln/GO-2023-1737"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 2.85,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2023-1737",
        "package": "github.com/gin-gonic/gin",
        "version": "1.9.0",
        "cvss": 0,
        "severity": "",
        "summary": "Improper handling of filenames in Content-Disposition HTTP header in github.com/gin-gonic/gin",
        "description": "The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of \"setup.bat\u0026quot;;x=.txt\" will be sent as a file named \"setup.bat\".\n\nIf the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.",
        "references": [
          "https://github.com/gin-gonic/gin/issues/3555",
          "https://github.com/gin-gonic/gin/pull/3556",
          "https://github.com/gin-gonic/gin/releases/tag/v1.9.1"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 7.324999999999999,
      "cvss_component": 8.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 6.5,
      "vulnerability": {
        "id": "GHSA-45x7-px36-x8w8",
        "package": "golang.org/x/crypto",
        "version": "0.5.0",
        "cvss": 8.5,
        "severity": "HIGH",
        "summary": "Prefix Truncation Attack against ChaCha20-Poly1305 and Encrypt-then-MAC aka Terrapin",
        "description": "### Summary\n\nTerrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.\n\n### Mitigations\n\nTo mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.\n\n**Warning: To take effect, both the client and server must support this countermeasure.** \n\nAs a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.\n\n### Details\n\nThe SSH specifications of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.\n\nThe attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.\n\nIn the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.\n\nFor more details see [https://terrapin-attack.com](https://terrapin-attack.com). \n\n### Impact\n\nThis attack targets the specification of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.",
        "references": [
          "https://github.com/warp-tech/russh/security/advisories/GHSA-45x7-px36-x8w8",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-48795",
          "https://github.com/ssh-mitm/ssh-mitm/issues/165",
          "https://github.com/janmojzis/tinyssh/issues/81",
          "https://github.com/proftpd/proftpd/issues/456",
          "https://github.com/hierynomus/sshj/issues/916",
          "https://github.com/paramiko/paramiko/issues/2337#issuecomment-1887642773",
          "https://github.com/paramiko/paramiko/issues/2337",
          "https://github.com/cyd01/KiTTY/issues/520",
          "https://github.com/PowerShell/Win32-OpenSSH/issues/2189",
          "https://github.com/mwiede/jsch/issues/457",
          "https://github.com/apache/mina-sshd/issues/445",
          "https://github.com/libssh2/libssh2/pull/1291",
          "https://github.com/mwiede/jsch/pull/461",
          "https://github.com/NixOS/nixpkgs/pull/275249",
          "https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0",
          "https://github.com/connectbot/sshlib/commit/5c8b534f6e97db7ac0e0e579331213aa25c173ab",
          "https://github.com/mscdex/ssh2/commit/97b223f8891b96d6fc054df5ab1d5a1a545da2a3",
          "https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d",
          "https://github.com/warp-tech/russh/commit/1aa340a7df1d5be1c0f4a9e247aade76dfdd2951",
          "https://github.com/jtesta/ssh-audit/commit/8e972c5e94b460379fe0c7d20209c16df81538a5",
          "https://security-tracker.debian.org/tracker/CVE-2023-48795",
          "https://security-tracker.debian.org/tracker/source-package/libssh2",
          "https://roumenpetrov.info/secsh/#news20231220",
          "https://security-tracker.debian.org/tracker/source-package/proftpd-dfsg",
          "https://security-tracker.debian.org/tracker/source-package/trilead-ssh2",
          "https://security.gentoo.org/glsa/202312-16",
          "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2024-0002",
          "https://oryx-embedded.com/download/#changelog",
          "https://nova.app/releases/#v11.8",
          "https://news.ycombinator.com/item?id=38732005",
          "https://news.ycombinator.com/item?id=38685286",
          "https://news.ycombinator.com/item?id=38684904",
          "https://nest.pijul.com/pijul/thrussh/changes/D6H7OWTTMHHX6BTB3B6MNBOBX2L66CBL4LGSEUSAI2MCRCJDQFRQC",
          "https://matt.ucc.asn.au/dropbear/CHANGES",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QI3EHAHABFQK7OABNCSF5GMYP6TONTI7",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MKQRBF3DWMWPH36LBCOBUTSIZRTPEZXB",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LZQVUHWVWRH73YBXUQJOD6CKHDQBU3DM",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/L5Y6MNNVAPIJSXJERQ6PKZVCIUXSNJK7",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KMZCVGUGJZZVDPCVDA7TEB22VUCNEXDD",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/I724O3LSRCPO4WNVIXTZCT4VVRMXMMSG",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HYEDEXIKFKTUJIN43RG4B7T5ZS6MHUSP",
          "https://www.vandyke.com/products/securecrt/history.txt",
          "https://www.theregister.com/2023/12/20/terrapin_attack_ssh",
          "https://www.terrapin-attack.com",
          "https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795",
          "https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed",
          "https://www.paramiko.org/changelog.html",
          "https://www.openwall.com/lists/oss-security/2023/12/20/3",
          "https://www.openwall.com/lists/oss-security/2023/12/18/2",
          "https://www.openssh.com/txt/release-9.6",
          "https://www.openssh.com/openbsd.html",
          "https://www.netsarang.com/en/xshell-update-history",
          "https://www.lancom-systems.de/service-support/allgemeine-sicherheitshinweise#c243508",
          "https://www.freebsd.org/security/advisories/FreeBSD-SA-23:19.openssh.asc",
          "https://www.debian.org/security/2023/dsa-5588",
          "https://www.debian.org/security/2023/dsa-5586",
          "https://www.crushftp.com/crush10wiki/Wiki.jsp?page=Update",
          "https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html",
          "https://www.bitvise.com/ssh-server-version-history",
          "https://www.bitvise.com/ssh-client-version-history#933",
          "https://winscp.net/eng/docs/history#6.2.2",
          "https://ubuntu.com/security/CVE-2023-48795",
          "https://twitter.com/TrueSkrillor/status/1736774389725565005",
          "https://thorntech.com/cve-2023-48795-and-sftp-gateway",
          "https://support.apple.com/kb/HT214084",
          "https://security.netapp.com/advisory/ntap-20240105-0004",
          "https://security.gentoo.org/glsa/202312-17",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F7EYCFQCTSGJXWO3ZZ44MGKFC5HA7G3Y",
          "https://github.com/rapier1/hpn-ssh/releases",
          "https://github.com/proftpd/proftpd/blob/master/RELEASE_NOTES",
          "https://github.com/proftpd/proftpd/blob/d21e7a2e47e9b38f709bec58e3fa711f759ad0e1/RELEASE_NOTES",
          "https://github.com/proftpd/proftpd/blob/0a7ea9b0ba9fcdf368374a226370d08f10397d99/RELEASE_NOTES",
          "https://github.com/openssh/openssh-portable/commits/master",
          "https://github.com/net-ssh/net-ssh/blob/2e65064a52d73396bfc3806c9196fc8108f33cd8/CHANGES.txt#L14-L16",
          "https://github.com/mwiede/jsch/compare/jsch-0.2.14...jsch-0.2.15",
          "https://github.com/mkj/dropbear/blob/17657c36cce6df7716d5ff151ec09a665382d5dd/CHANGES#L25",
          "https://github.com/erlang/otp/releases/tag/OTP-26.2.1",
          "https://github.com/erlang/otp/blob/d1b43dc0f1361d2ad67601169e90a7fc50bb0369/lib/ssh/doc/src/notes.xml#L39-L42",
          "https://github.com/drakkan/sftpgo/releases/tag/v2.5.6",
          "https://github.com/connectbot/sshlib/compare/2.2.21...2.2.22",
          "https://github.com/advisories/GHSA-45x7-px36-x8w8",
          "https://github.com/TeraTermProject/teraterm/releases/tag/v5.1",
          "https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v9.5.0.0p1-Beta",
          "https://git.libssh.org/projects/libssh.git/commit/?h=stable-0.10\u0026id=10e09e273f69e149389b3e0e5d44b8c221c2e7f6",
          "https://forum.netgate.com/topic/184941/terrapin-ssh-attack",
          "https://filezilla-project.org/versions.php",
          "https://crates.io/crates/thrussh/versions",
          "https://bugzilla.suse.com/show_bug.cgi?id=1217950",
          "https://bugzilla.redhat.com/show_bug.cgi?id=2254210",
          "https://bugs.gentoo.org/920280",
          "https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack",
          "https://access.redhat.com/security/cve/cve-2023-48795",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C3AFMZ6MH2UHHOPIWT5YLSFV3D2VB3AC",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BL5KTLOSLH2KHRN4HCXJPK3JUVLDGEL6",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/APYIXIQOVDCRWLHTGB4VYMAUIAQLKYJ3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6Y74KVCPEPT4MVU3LHDWCNNOXOE5ZLUR",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YQLUQWLIHDB5QCXQEX7HXHAWMOKPP5O",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3JIMLVBDWOP4FUPXPTB4PGHHIOMGFLQE",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3CAYYW35MUTNO65RVAELICTNZZFMT2XS",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/33XHJUB6ROFUOH2OQNENFROTVH6MHSHA",
          "https://lists.debian.org/debian-lts-announce/2024/04/msg00016.html",
          "https://lists.debian.org/debian-lts-announce/2024/01/msg00014.html",
          "https://lists.debian.org/debian-lts-announce/2024/01/msg00013.html",
          "https://lists.debian.org/debian-lts-announce/2023/12/msg00017.html",
          "https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795",
          "https://help.panic.com/releasenotes/transmit5",
          "https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg",
          "https://groups.google.com/g/golang-announce/c/-n5WqVC18LQ",
          "https://go.dev/issue/64784",
          "https://go.dev/cl/550715",
          "https://gitlab.com/libssh/libssh-mirror/-/tags",
          "https://github.com/warp-tech/russh/releases/tag/v0.40.2",
          "https://github.com/warp-tech/russh",
          "https://github.com/ronf/asyncssh/tags",
          "https://github.com/ronf/asyncssh/blob/develop/docs/changes.rst",
          "http://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html",
          "http://seclists.org/fulldisclosure/2024/Mar/21",
          "http://www.openwall.com/lists/oss-security/2023/12/18/3",
          "http://www.openwall.com/lists/oss-security/2023/12/19/5",
          "http://www.openwall.com/lists/oss-security/2023/12/20/3",
          "http://www.openwall.com/lists/oss-security/2024/03/06/3",
          "http://www.openwall.com/lists/oss-security/2024/04/17/8"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.075,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 6.5,
      "vulnerability": {
        "id": "GO-2023-2402",
        "package": "golang.org/x/crypto",
        "version": "0.5.0",
        "cvss": 0,
        "severity": "",
        "summary": "Man-in-the-middle attacker can compromise integrity of secure channel in golang.org/x/crypto",
        "description": "A protocol weakness allows a MITM attacker to compromise the integrity of the secure channel before it is established, allowing the attacker to prevent transmission of a number of messages immediately after the secure channel is established without either side being aware.\n\nThe impact of this attack is relatively limited, as it does not compromise confidentiality of the channel. Notably this attack would allow an attacker to prevent the transmission of the SSH2_MSG_EXT_INFO message, disabling a handful of newer security features.\n\nThis protocol weakness was also fixed in OpenSSH 9.6.",
        "references": [
          "https://go.dev/issue/64784",
          "https://go.dev/cl/550715",
          "https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d",
          "https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg",
          "https://www.openssh.com/txt/release-9.6"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 7.324999999999999,
      "cvss_component": 8.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 6.5,
      "vulnerability": {
        "id": "GHSA-v778-237x-gjrc",
        "package": "golang.org/x/crypto",
        "version": "0.5.0",
        "cvss": 8.5,
        "severity": "HIGH",
        "summary": "Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
        "description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass.\n\nThe documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions.\n\nFor example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key.\n\nSince this API is widely misused, as a partial mitigation golang.org/x/crypto@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth.\n\nUsers should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
          "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
          "https://github.com/golang/crypto",
          "https://go.dev/cl/635315",
          "https://go.dev/issue/70779",
          "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
          "https://pkg.go.dev/vuln/GO-2024-3321",
          "https://security.netapp.com/advisory/ntap-20250131-0007",
          "http://www.openwall.com/lists/oss-security/2024/12/11/2"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.075,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 6.5,
      "vulnerability": {
        "id": "GO-2024-3321",
        "package": "golang.org/x/crypto",
        "version": "0.5.0",
        "cvss": 0,
        "severity": "",
        "summary": "Misuse of connection.serverAuthenticate may cause authorization bypass in golang.org/x/crypto",
        "description": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass.\n\nThe documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions.\n\nFor example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key.\n\nSince this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth.\n\nUsers should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
        "references": [
          "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
          "https://go.dev/cl/635315",
          "https://go.dev/issue/70779",
          "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 7.324999999999999,
      "cvss_component": 8.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 6.5,
      "vulnerability": {
        "id": "GHSA-hcg3-q754-cr77",
        "package": "golang.org/x/crypto",
        "version": "0.5.0",
        "cvss": 8.5,
        "severity": "HIGH",
        "summary": "golang.org/x/crypto Vulnerable to Denial of Service (DoS) via Slow or Incomplete Key Exchange",
        "description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22869",
          "https://github.com/golang/crypto/commit/7292932d45d55c7199324ab0027cc86e8198aa22",
          "https://github.com/golang/crypto",
          "https://go-review.googlesource.com/c/crypto/+/652135",
          "https://go.dev/cl/652135",
          "https://go.dev/issue/71931",
          "https://pkg.go.dev/vuln/GO-2025-3487",
          "https://security.netapp.com/advisory/ntap-20250411-0010"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.075,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 6.5,
      "vulnerability": {
        "id": "GO-2025-3487",
        "package": "golang.org/x/crypto",
        "version": "0.5.0",
        "cvss": 0,
        "severity": "",
        "summary": "Potential denial of service in golang.org/x/crypto",
        "description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
        "references": [
          "https://go.dev/cl/652135",
          "https://go.dev/issue/71931"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 4.4,
      "cvss_component": 2.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GHSA-2wrh-6pvc-2jm9",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 2.5,
        "severity": "LOW",
        "summary": "Improper rendering of text nodes in golang.org/x/net/html",
        "description": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack. ",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-3978",
          "https://go.dev/cl/514896",
          "https://go.dev/issue/61615",
          "https://pkg.go.dev/vuln/GO-2023-1988"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.15,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GO-2023-1988",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 0,
        "severity": "",
        "summary": "Improper rendering of text nodes in golang.org/x/net/html",
        "description": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack.",
        "references": [
          "https://go.dev/issue/61615",
          "https://go.dev/cl/514896"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 7.3999999999999995,
      "cvss_component": 8.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GHSA-4374-p667-p6c8",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 8.5,
        "severity": "HIGH",
        "summary": "HTTP/2 rapid reset can cause excessive work in net/http",
        "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. \n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. \n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-39325",
          "https://github.com/golang/go/issues/63417",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NG7IMPL55MVWU3LCI4JQJT3K2U5CHDV7",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ODBY7RVMGZCBSTWF2OZGIZS57FNFUL67",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OXGWPQOJ3JNDW2XIYKIVJ7N7QUIFNM2Q",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PJCUNGIQDUMZ4Z6HWVYIMR66A35F5S74",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QF5QSYAOPDOWLY6DUHID56Q4HQFYB45I",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QXOU2JZUBEBP7GBKAYIJRPRBZSJCD7ST",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R3UETKPUB3V5JS5TLZOF3SMTGT5K5APS",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULQQONMSCQSH5Z5OWFFQHCGEZ3NL4DRJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTT7DG3QOF5ZNJLUGHDNLRUIN6OWZARP",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W2LZSWTV4NV4SNQARNXG5T6LRHP26EW2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WCNCBYKZXLDFGAJUB7ZP5VLC3YTHJNVH",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XTNLSL44Y5FB6JWADSZH6DCV4JJAAEQY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YJWHBLVZDM5KQSDFRBFRKU5KSSOLIRQ4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YRKEXKANQ7BKJW2YTAMP625LJUJZLJ4P",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZSVEMQV5ROY5YW5QE3I57HT3ITWG5GCV",
          "https://pkg.go.dev/vuln/GO-2023-2102",
          "https://security.gentoo.org/glsa/202311-09",
          "https://security.netapp.com/advisory/ntap-20231110-0008",
          "https://go.dev/cl/534215",
          "https://go.dev/cl/534235",
          "https://go.dev/issue/63417",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3OVW5V2DM5K5IC3H7O42YDUGNJ74J35O",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SZN67IL7HMGMNAVLOTIXLIHUDXZK4LH",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3WJ4QVX2AMUJ2F2S27POOAHRC4K3CHU4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5RSKA2II6QTD4YUKUNDVJQSRYSFC4VFR",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVZDNSMVDAQJ64LJC5I5U5LDM5753647",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/D2BBIDR2ZMB3X5BC7SR4SLQMHRMVPY6L",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ECRC75BQJP6FJN2L7KCKYZW4DSBD7QSD",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FTMJ3NJIDAZFWJQQSP3L22MUFJ3UP2PT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GSY7SXFFTPZFWDM6XELSDSHZLVW3AHK7",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HZQIELEIRSZUYTFFH5KTH2YJ4IIQG2KE",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IPWCNYB5PQ5PCVZ4NJT6G56ZYFZ5QBU6",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L5E5JSJBZLYXOTZWXHJKRVCIXIHVWKJ6",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MZQYOOKHQDQ57LV2IAG6NRFOVXKHJJ3Z",
          "golang.org/x/net"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 4.4,
      "cvss_component": 2.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GHSA-qppj-fm5r-hxr3",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 2.5,
        "severity": "LOW",
        "summary": "HTTP/2 Stream Cancellation Attack",
        "description": "## HTTP/2 Rapid reset attack\nThe HTTP/2 protocol allows clients to indicate to the server that a previous stream should be canceled by sending a RST_STREAM frame. The protocol does not require the client and server to coordinate the cancellation in any way, the client may do it unilaterally. The client may also assume that the cancellation will take effect immediately when the server receives the RST_STREAM frame, before any other data from that TCP connection is processed.\n\nAbuse of this feature is called a Rapid Reset attack because it relies on the ability for an endpoint to send a RST_STREAM frame immediately after sending a request frame, which makes the other endpoint start working and then rapidly resets the request. The request is canceled, but leaves the HTTP/2 connection open. \n\nThe HTTP/2 Rapid Reset attack built on this capability is simple: The client opens a large number of streams at once as in the standard HTTP/2 attack, but rather than waiting for a response to each request stream from the server or proxy, the client cancels each request immediately.\n\nThe ability to reset streams immediately allows each connection to have an indefinite number of requests in flight. By explicitly canceling the requests, the attacker never exceeds the limit on the number of concurrent open streams. The number of in-flight requests is no longer dependent on the round-trip time (RTT), but only on the available network bandwidth.\n\nIn a typical HTTP/2 server implementation, the server will still have to do significant amounts of work for canceled requests, such as allocating new stream data structures, parsing the query and doing header decompression, and mapping the URL to a resource. For reverse proxy implementations, the request may be proxied to the backend server before the RST_STREAM frame is processed. The client on the other hand paid almost no costs for sending the requests. This creates an exploitable cost asymmetry between the server and the client.\n\nMultiple software artifacts implementing HTTP/2 are affected. This advisory was originally ingested from the `swift-nio-http2` repo advisory and their original conent follows.\n\n## swift-nio-http2 specific advisory\nswift-nio-http2 is vulnerable to a denial-of-service vulnerability in which a malicious client can create and then reset a large number of HTTP/2 streams in a short period of time. This causes swift-nio-http2 to commit to a large amount of expensive work which it then throws away, including creating entirely new `Channel`s to serve the traffic. This can easily overwhelm an `EventLoop` and prevent it from making forward progress.\n\nswift-nio-http2 1.28 contains a remediation for this issue that applies reset counter using a sliding window. This constrains the number of stream resets that may occur in a given window of time. Clients violating this limit will have their connections torn down. This allows clients to continue to cancel streams for legitimate reasons, while constraining malicious actors.",
        "references": [
          "https://github.com/apple/swift-nio-http2/security/advisories/GHSA-qppj-fm5r-hxr3",
          "https://github.com/h2o/h2o/security/advisories/GHSA-2m7v-gc89-fjqf",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-44487",
          "https://github.com/apache/apisix/issues/10320",
          "https://github.com/alibaba/tengine/issues/1872",
          "https://github.com/caddyserver/caddy/issues/5877",
          "https://github.com/dotnet/announcements/issues/277",
          "https://github.com/akka/akka-http/issues/4323",
          "https://github.com/eclipse/jetty.project/issues/10679",
          "https://github.com/etcd-io/etcd/issues/16740",
          "https://github.com/Azure/AKS/issues/3947",
          "https://github.com/golang/go/issues/63417",
          "https://github.com/varnishcache/varnish-cache/issues/3996",
          "https://github.com/tempesta-tech/tempesta/issues/1986",
          "https://github.com/haproxy/haproxy/issues/2312",
          "https://github.com/hyperium/hyper/issues/3337",
          "https://github.com/openresty/openresty/issues/930",
          "https://github.com/junkurihara/rust-rpxy/issues/97",
          "https://github.com/ninenines/cowboy/issues/1615",
          "https://github.com/kazu-yamamoto/http2/issues/93",
          "https://github.com/opensearch-project/data-prepper/issues/3474",
          "https://github.com/apache/trafficserver/pull/10564",
          "https://github.com/nodejs/node/pull/50121",
          "https://github.com/nghttp2/nghttp2/pull/1961",
          "https://github.com/microsoft/CBL-Mariner/pull/6381",
          "https://github.com/linkerd/website/pull/1695/commits/4b9c6836471bc8270ab48aae6fd2181bc73fd632",
          "https://github.com/line/armeria/pull/5232",
          "https://github.com/envoyproxy/envoy/pull/30055",
          "https://github.com/kubernetes/kubernetes/pull/121120",
          "https://github.com/facebook/proxygen/pull/466",
          "https://github.com/grpc/grpc-go/pull/6703",
          "https://github.com/projectcontour/contour/pull/5826",
          "https://github.com/h2o/h2o/pull/3291",
          "https://github.com/apache/httpd-site/pull/10",
          "https://github.com/akka/akka-http/pull/4325",
          "https://github.com/akka/akka-http/pull/4324",
          "https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628",
          "https://github.com/kazu-yamamoto/http2/commit/f61d41a502bd0f60eb24e1ce14edc7b6df6722a1",
          "https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A",
          "https://my.f5.com/manage/s/article/K000137106",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y",
          "https://lists.w3.org/Archives/Public/ietf-http-wg/2023OctDec/0025.html",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4",
          "https://mailman.nginx.org/pipermail/nginx-devel/2023-October/S36Q5HBXR7CAIMPLLPRSSSYR4PCMWILK.html",
          "https://martinthomson.github.io/h2-stream-limits/draft-thomson-httpbis-h2-stream-limits.html",
          "https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2",
          "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-44487",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://ubuntu.com/security/CVE-2023-44487",
          "https://www.bleepingcomputer.com/news/security/new-http-2-rapid-reset-zero-day-attack-breaks-ddos-records",
          "https://www.cisa.gov/news-events/alerts/2023/10/10/http2-rapid-reset-vulnerability-cve-2023-44487",
          "https://www.darkreading.com/cloud/internet-wide-zero-day-bug-fuels-largest-ever-ddos-event",
          "https://www.debian.org/security/2023/dsa-5521",
          "https://www.debian.org/security/2023/dsa-5522",
          "https://www.debian.org/security/2023/dsa-5540",
          "https://www.debian.org/security/2023/dsa-5549",
          "https://www.debian.org/security/2023/dsa-5558",
          "https://www.debian.org/security/2023/dsa-5570",
          "https://www.eclipse.org/lists/jetty-announce/msg00181.html",
          "https://www.haproxy.com/blog/haproxy-is-not-affected-by-the-http-2-rapid-reset-attack-cve-2023-44487",
          "https://www.netlify.com/blog/netlify-successfully-mitigates-cve-2023-44487",
          "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products",
          "https://www.openwall.com/lists/oss-security/2023/10/10/6",
          "https://www.phoronix.com/news/HTTP2-Rapid-Reset-Attack",
          "https://www.theregister.com/2023/10/10/http2_rapid_reset_zeroday",
          "https://www.vicarius.io/vsociety/posts/rapid-reset-cve-2023-44487-dos-in-http2-understanding-the-root-cause",
          "https://netty.io/news/2023/10/10/4-1-100-Final.html",
          "https://news.ycombinator.com/item?id=37830987",
          "https://news.ycombinator.com/item?id=37830998",
          "https://news.ycombinator.com/item?id=37831062",
          "https://news.ycombinator.com/item?id=37837043",
          "https://openssf.org/blog/2023/10/10/http-2-rapid-reset-vulnerability-highlights-need-for-rapid-response",
          "https://seanmonstar.com/post/730794151136935936/hyper-http2-rapid-reset-unaffected",
          "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-http2-reset-d8Kf32vZ",
          "https://security.gentoo.org/glsa/202311-09",
          "https://security.netapp.com/advisory/ntap-20231016-0001",
          "https://security.netapp.com/advisory/ntap-20240426-0007",
          "https://security.netapp.com/advisory/ntap-20240621-0006",
          "https://security.netapp.com/advisory/ntap-20240621-0007",
          "https://security.paloaltonetworks.com/CVE-2023-44487",
          "https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.14",
          "https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.0-M12",
          "https://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.5.94",
          "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.81",
          "https://access.redhat.com/security/cve/cve-2023-44487",
          "https://edg.io/lp/blog/resets-leaks-ddos-and-the-tale-of-a-hidden-cve",
          "https://forums.swift.org/t/swift-nio-http2-security-update-cve-2023-44487-http-2-dos/67764",
          "https://gist.github.com/adulau/7c2bfb8e9cdbe4b35a5e131c66a0c088",
          "https://github.com/Kong/kong/discussions/11741",
          "https://github.com/advisories/GHSA-qppj-fm5r-hxr3",
          "https://github.com/advisories/GHSA-vx74-f528-fxqg",
          "https://github.com/advisories/GHSA-xpw8-rcwv-8f8p",
          "https://github.com/apache/httpd/blob/afcdbeebbff4b0c50ea26cdd16e178c0d1f24152/modules/http2/h2_mplx.c#L1101-L1113",
          "https://github.com/apache/tomcat/tree/main/java/org/apache/coyote/http2",
          "https://github.com/apple/swift-nio-http2",
          "https://github.com/arkrwn/PoC/tree/main/CVE-2023-44487",
          "https://github.com/bcdannyboy/CVE-2023-44487",
          "https://github.com/caddyserver/caddy/releases/tag/v2.7.5",
          "https://github.com/dotnet/core/blob/e4613450ea0da7fd2fc6b61dfb2c1c1dec1ce9ec/release-notes/6.0/6.0.23/6.0.23.md?plain=1#L73",
          "https://github.com/grpc/grpc-go/releases",
          "https://github.com/grpc/grpc/releases/tag/v1.59.2",
          "https://github.com/icing/mod_h2/blob/0a864782af0a942aa2ad4ed960a6b32cd35bcf0a/mod_http2/README.md?plain=1#L239-L244",
          "https://akka.io/security/akka-http-cve-2023-44487.html",
          "https://arstechnica.com/security/2023/10/how-ddosers-used-the-http-2-protocol-to-deliver-attacks-of-unprecedented-size",
          "https://aws.amazon.com/security/security-bulletins/AWS-2023-011",
          "https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack",
          "https://blog.cloudflare.com/zero-day-rapid-reset-http2-record-breaking-ddos-attack",
          "https://blog.litespeedtech.com/2023/10/11/rapid-reset-http-2-vulnerablilty",
          "https://blog.qualys.com/vulnerabilities-threat-research/2023/10/10/cve-2023-44487-http-2-rapid-reset-attack",
          "https://blog.vespa.ai/cve-2023-44487",
          "https://bugzilla.proxmox.com/show_bug.cgi?id=4988",
          "https://bugzilla.redhat.com/show_bug.cgi?id=2242803",
          "https://bugzilla.suse.com/show_bug.cgi?id=1216123",
          "https://cgit.freebsd.org/ports/commit/?id=c64c329c2c1752f46b73e3e6ce9f4329be6629f9",
          "https://chaos.social/@icing/111210915918780532",
          "https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps",
          "https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack",
          "https://community.traefik.io/t/is-traefik-vulnerable-to-cve-2023-44487/20125",
          "https://discuss.hashicorp.com/t/hcsec-2023-32-vault-consul-and-boundary-affected-by-http-2-rapid-reset-denial-of-service-vulnerability-cve-2023-44487/59715",
          "https://lists.debian.org/debian-lts-announce/2023/11/msg00012.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH",
          "https://github.com/micrictor/http2-rst-stream",
          "https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0",
          "https://github.com/oqtane/oqtane.framework/discussions/3367",
          "https://go.dev/cl/534215",
          "https://go.dev/cl/534235",
          "https://go.dev/issue/63417",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ",
          "https://istio.io/latest/news/security/istio-security-2023-004",
          "https://linkerd.io/2023/10/12/linkerd-cve-2023-44487",
          "https://lists.apache.org/thread/5py8h42mxfsn8l1wy6o41xwhsjlsd87q",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00020.html",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00024.html",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00045.html",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00047.html",
          "https://lists.debian.org/debian-lts-announce/2023/11/msg00001.html",
          "http://www.openwall.com/lists/oss-security/2023/10/10/6",
          "http://www.openwall.com/lists/oss-security/2023/10/10/7",
          "http://www.openwall.com/lists/oss-security/2023/10/13/4",
          "http://www.openwall.com/lists/oss-security/2023/10/13/9",
          "http://www.openwall.com/lists/oss-security/2023/10/18/4",
          "http://www.openwall.com/lists/oss-security/2023/10/18/8",
          "http://www.openwall.com/lists/oss-security/2023/10/19/6",
          "http://www.openwall.com/lists/oss-security/2023/10/20/8"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.15,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GO-2023-2102",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 0,
        "severity": "",
        "summary": "HTTP/2 rapid reset can cause excessive work in net/http",
        "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
        "references": [
          "https://go.dev/issue/63417",
          "https://go.dev/cl/534215",
          "https://go.dev/cl/534235",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 4.4,
      "cvss_component": 2.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GHSA-4v7x-pqxf-cx7m",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 2.5,
        "severity": "LOW",
        "summary": "net/http, x/net/http2: close connections when receiving too many headers",
        "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45288",
          "https://go.dev/cl/576155",
          "https://go.dev/issue/65051",
          "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT",
          "https://nowotarski.info/http2-continuation-flood-technical-details",
          "https://pkg.go.dev/vuln/GO-2024-2687",
          "https://security.netapp.com/advisory/ntap-20240419-0009",
          "http://www.openwall.com/lists/oss-security/2024/04/03/16",
          "http://www.openwall.com/lists/oss-security/2024/04/05/4"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.15,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GO-2024-2687",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 0,
        "severity": "",
        "summary": "HTTP/2 CONTINUATION flood in net/http",
        "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "references": [
          "https://go.dev/issue/65051",
          "https://go.dev/cl/576155",
          "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.15,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GO-2024-3333",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 0,
        "severity": "",
        "summary": "Non-linear parsing of case-insensitive content in golang.org/x/net/html",
        "description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
        "references": [
          "https://go.dev/cl/637536",
          "https://go.dev/issue/70906",
          "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 4.4,
      "cvss_component": 2.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GHSA-qxp5-gwg8-xv66",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 2.5,
        "severity": "LOW",
        "summary": "HTTP Proxy bypass using IPv6 Zone IDs in golang.org/x/net",
        "description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22870",
          "https://go-review.googlesource.com/q/project:net",
          "https://go.dev/cl/654697",
          "https://go.dev/issue/71984",
          "https://pkg.go.dev/vuln/GO-2025-3503",
          "https://security.netapp.com/advisory/ntap-20250509-0007",
          "http://www.openwall.com/lists/oss-security/2025/03/07/2"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.15,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GO-2025-3503",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 0,
        "severity": "",
        "summary": "HTTP Proxy bypass using IPv6 Zone IDs in golang.org/x/net",
        "description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
        "references": [
          "https://go.dev/cl/654697",
          "https://go.dev/issue/71984"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.15,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GHSA-vvgc-356p-c3xw",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 0,
        "severity": "",
        "summary": "golang.org/x/net vulnerable to Cross-site Scripting",
        "description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22872",
          "https://go.dev/cl/662715",
          "https://go.dev/issue/73070",
          "https://groups.google.com/g/golang-announce/c/ezSKR9vqbqA",
          "https://pkg.go.dev/vuln/GO-2025-3595",
          "https://security.netapp.com/advisory/ntap-20250516-0007"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.15,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 7,
      "vulnerability": {
        "id": "GO-2025-3595",
        "package": "golang.org/x/net",
        "version": "0.7.0",
        "cvss": 0,
        "severity": "",
        "summary": "Incorrect Neutralization of Input During Web Page Generation in x/net in golang.org/x/net",
        "description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
        "references": [
          "https://go.dev/cl/662715",
          "https://go.dev/issue/73070",
          "https://groups.google.com/g/golang-announce/c/ezSKR9vqbqA"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 7.1,
      "cvss_component": 8.5,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 5,
      "vulnerability": {
        "id": "GHSA-8r3f-844c-mc37",
        "package": "google.golang.org/protobuf",
        "version": "1.28.1",
        "cvss": 8.5,
        "severity": "HIGH",
        "summary": "Golang protojson.Unmarshal function infinite loop when unmarshaling certain forms of invalid JSON",
        "description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24786",
          "https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023",
          "https://github.com/protocolbuffers/protobuf-go",
          "https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0",
          "https://go.dev/cl/569356",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU",
          "https://pkg.go.dev/vuln/GO-2024-2611",
          "https://security.netapp.com/advisory/ntap-20240517-0002",
          "http://www.openwall.com/lists/oss-security/2024/03/08/4"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 2.85,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 2,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2024-2611",
        "package": "google.golang.org/protobuf",
        "version": "1.28.1",
        "cvss": 0,
        "severity": "",
        "summary": "Infinite loop in JSON unmarshaling in google.golang.org/protobuf",
        "description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
        "references": [
          "https://go.dev/cl/569356"
        ],
        "is_direct": true
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2024-3105",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Stack exhaustion in all Parse functions in go/parser",
        "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
        "references": [
          "https://go.dev/cl/611238",
          "https://go.dev/issue/69138",
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2024-3106",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Stack exhaustion in Decoder.Decode in encoding/gob",
        "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
        "references": [
          "https://go.dev/cl/611239",
          "https://go.dev/issue/69139",
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2024-3107",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Stack exhaustion in Parse in go/build/constraint",
        "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
        "references": [
          "https://go.dev/cl/611240",
          "https://go.dev/issue/69141",
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2025-3373",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Usage of IPv6 zone IDs can bypass URI name constraints in crypto/x509",
        "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
        "references": [
          "https://go.dev/cl/643099",
          "https://go.dev/issue/71156",
          "https://groups.google.com/g/golang-dev/c/bG8cv1muIBM/m/G461hA6lCgAJ",
          "https://groups.google.com/g/golang-dev/c/CAWXhan3Jww/m/bk9LAa-lCgAJ"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2025-3420",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Sensitive headers incorrectly sent after cross-domain redirect in net/http",
        "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
        "references": [
          "https://go.dev/cl/643100",
          "https://go.dev/issue/70530",
          "https://groups.google.com/g/golang-dev/c/CAWXhan3Jww/m/bk9LAa-lCgAJ",
          "https://groups.google.com/g/golang-dev/c/bG8cv1muIBM/m/G461hA6lCgAJ"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2025-3447",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Timing sidechannel for P-256 on ppc64le in crypto/internal/nistec",
        "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
        "references": [
          "https://go.dev/cl/643735",
          "https://go.dev/issue/71383",
          "https://groups.google.com/g/golang-announce/c/xU1ZCHUZw3k"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2025-3563",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Request smuggling due to acceptance of invalid chunked data in net/http",
        "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
        "references": [
          "https://go.dev/cl/652998",
          "https://go.dev/issue/71988",
          "https://groups.google.com/g/golang-announce/c/Y2uBTVKjBQk"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2025-3750",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Inconsistent handling of O_CREATE|O_EXCL on Unix and Windows in os in syscall",
        "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
        "references": [
          "https://go.dev/cl/672396",
          "https://go.dev/issue/73702",
          "https://groups.google.com/g/golang-announce/c/ufZ8WpEsA3A"
        ],
        "is_direct": false
      }
    },
    {
      "overall": 3.45,
      "cvss_component": 0,
      "popularity_component": 9,
      "dependency_component": 6,
      "context_component": 5,
      "vulnerability": {
        "id": "GO-2025-3751",
        "package": "stdlib",
        "version": "1.21",
        "cvss": 0,
        "severity": "",
        "summary": "Sensitive headers not cleared on cross-origin redirect in net/http",
        "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
        "references": [
          "https://go.dev/cl/679257",
          "https://go.dev/issue/73816",
          "https://groups.google.com/g/golang-announce/c/ufZ8WpEsA3A"
        ],
        "is_direct": false
      }
    }
  ],
  "summary": {
    "total_vulnerabilities": 31,
    "high_risk_count": 5,
    "medium_risk_count": 5,
    "low_risk_count": 21,
    "average_score": 4.070967741935485
  }
}